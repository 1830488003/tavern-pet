# 项目名称：酒馆宠物 (Tavern Pet)

**版本**: 7.0.0
**作者**: Cline
**日期**: 2025-06-19

---

## 1. 项目概述

“酒馆宠物”是一个为 SillyTavern 开发的第三方扩展。它在主界面上添加了一个可爱的、可拖动的桌面宠物。用户可以与宠物进行简单的交互，例如投喂和玩耍，这些交互会影响宠物的状态。该扩展旨在为用户的酒馆体验增添一些趣味性和陪伴感。

---

## 2. 功能实现

### 2.1 核心文件
- `manifest.json`: 扩展的清单文件，用于在SillyTavern中注册本插件。
- `index.js`: 插件的核心逻辑，包括UI创建、事件处理、状态管理等。
- `style.css`: 定义了浮动按钮、弹窗和设置面板的所有样式。
- `settings.html`: 插件在SillyTavern设置页面的UI结构。

### 2.2 主要功能点

1.  **浮动宠物按钮**:
-   **动态多宠物系统 (Dynamic Multi-Pet System)**:
    -   **数据驱动**: 宠物列表完全由 `pets.json` 文件动态生成。每个宠物拥有自己的名字（ID）和一组GIF动图（姿态）。
    -   **宠物切换**: 用户可以在交互弹窗中通过下拉菜单方便地选择不同的宠物。
    -   **姿态切换**: 新增“切换姿态”按钮，用户可以循环切换当前宠物的不同GIF动图，增加了互动性和趣味性。
    -   **状态记忆**: 当前选择的宠物、当前的姿态索引以及所有状态都会被完整保存在 `localStorage` 中，刷新后无缝恢复。
-   **外观优化**:
    -   **尺寸调整**: 扩大了宠物图标的尺寸，使其与其他UI元素更协调。
    -   **透明背景**: 移除了按钮的背景框和阴影，让宠物更自然地融入界面。
-   **可拖动**: 用户可以在屏幕上自由拖动宠物按钮到任何喜欢的位置。此功能同时兼容桌面鼠标操作和移动设备触摸操作。
    -   **位置记忆**: 宠物按钮的位置会自动保存在浏览器的 `localStorage` 中。刷新页面后，按钮会恢复到上次拖动结束时的位置。
    -   **窗口边缘检测**: 当浏览器窗口大小改变时，会自动检测按钮是否超出边界，并将其拉回可视区域内，防止按钮“丢失”。

2.  **宠物交互弹窗**:
    -   点击宠物按钮后，会弹出一个交互界面。
    -   **状态显示**: 弹窗内以进度条的形式实时显示宠物的“饥饿度”和“心情”两个核心状态。
    -   **交互按钮**: 提供“投喂”和“陪玩”两个按钮。
        -   **投喂**: 增加宠物的饥饿度。
        -   **陪玩**: 增加宠物的心情，但会略微消耗饥饿度。

3.  **宠物状态管理**:
    -   **数据持久化**: 宠物的所有状态（名称、饥饿度、心情、上次更新时间）都保存在 `localStorage` 中，确保刷新后数据不丢失。
    -   **状态自动衰减**: 插件内置一个定时器，会模拟时间的流逝。如果长时间不与宠物交互，它的饥饿度和心情会缓慢下降，增加了养成的真实感。

4.  **设置面板集成**:
    -   在SillyTavern的“扩展设置”中添加了“酒馆宠物”的管理面板。
    -   **总开关**: 提供一个开关，允许用户随时启用或禁用此插件。禁用后，浮动宠物按钮将从界面上移除，再次启用后恢复。此设置同样会被保存。

---

## 3. 技术实现亮点

- **纯JS动态UI**: 所有UI元素（按钮、弹窗）都由 `index.js` 动态创建并注入到页面中，与SillyTavern主体无耦合，易于维护。
- **移动端优先**: 布局和拖动功能从一开始就考虑了移动端适配，确保在手机和平板上也有良好的体验。
- **主题自适应**: 所有UI颜色均使用SillyTavern的CSS变量，可以完美适配不同的官方或自定义主题。
- **事件驱动**: 通过jQuery清晰地绑定了点击、拖动、窗口大小调整等事件。
- **状态管理**: 逻辑清晰地分离了UI渲染和数据状态，通过 `loadPetState` 和 `savePetState` 函数集中管理数据。

---

## 4. 如何使用

1.  确保插件已放置在 `SillyTavern/public/extensions/third-party/` 目录下。
2.  重启SillyTavern。
3.  默认情况下，宠物按钮会出现在屏幕右上角附近。
4.  你可以拖动它到任何位置。
5.  点击宠物按钮打开交互菜单。
6.  如果想暂时隐藏宠物，可以进入 设置 -> 扩展 -> 酒馆宠物，然后关闭“启用酒馆宠物”的开关。

---

## 5. 更新日志

### v7.0.0 (完成)
-   **任务**: 实现一个由 `pets.json` 驱动的、支持多宠物、多姿态的全新宠物系统。
-   **计划**:
    1.  **重构 `index.js`**:
        -   从 `pets.json` 异步加载所有宠物数据。
        -   在弹窗中动态生成宠物选择下拉菜单。
        -   实现宠物切换、姿态切换的核心逻辑。
        -   重写状态管理 (`petState`)，以支持新的数据结构（`petId`, `poseIndex`）。
        -   将宠物按钮的背景图替换为 `<img>` 标签，直接显示GIF。
    2.  **更新 `style.css`**:
        -   为新的 `<img>` 标签和宠物选择下拉菜单添加样式。
        -   移除所有旧的、基于SVG背景的样式规则。
    3.  **数据持久化**: 将选择的宠物ID和当前姿态索引保存到 `localStorage`。
-   **反馈来源**: 用户要求使用 `url/` 目录下的txt文件生成更多宠物，并为每个宠物添加命名和姿态切换功能。

### v6.0.0 (完成)
-   **任务**: 使用用户提供的GIF动图替换静态SVG宠物，并添加切换姿态的功能。
-   **计划**:
    1.  **获取GIF列表**: 动态读取 `gif/` 目录下的所有图片文件。
    2.  **修改UI (`index.js`)**: 在交互弹窗中新增一个“切换姿态”按钮。
    3.  **实现切换逻辑 (`index.js`)**: 点击按钮时，循环切换宠物的GIF图片。
    4.  **更新样式 (`style.css`)**: 修改样式以支持直接显示GIF图片。
    5.  **状态保存**: 将当前宠物的姿态（GIF路径）保存到 `localStorage`。
-   **反馈来源**: 用户要求使用自己下载的GIF动图。

### v5.0.0 (完成)
-   **任务**: 根据用户反馈，修复v4版本中错误的SVG图标，改用官方完整的Twemoji SVG源码。
-   **计划**:
    1.  **获取官方源码**: 从Twemoji开源项目中获取12生肖的官方、完整SVG代码。
    2.  **样式修复 (`style.css`)**: 使用官方源码彻底替换`style.css`中所有宠物的背景图。
-   **反馈来源**: 用户反馈 v4.0.0 的SVG图标显示完全错误。
-   **任务**: 根据用户反馈，修复v4版本中错误的SVG图标，改用官方完整的Twemoji SVG源码。
-   **计划**:
    1.  **获取官方源码**: 从Twemoji开源项目中获取12生肖的官方、完整SVG代码。
    2.  **样式修复 (`style.css`)**: 使用官方源码彻底替换`style.css`中所有宠物的背景图。
-   **反馈来源**: 用户反馈 v4.0.0 的SVG图标显示完全错误。

### v4.0.0 (2025-06-19)
-   **[已废弃]** 尝试使用Twemoji图标库，但因使用了错误的SVG源码导致显示失败。

### v3.0.0 (2025-06-19)
-   **[已废弃]** 根据用户提供的像素图手绘SVG。因效果不佳，此版本被 v4.0.0 替代。

### v2.0.0 (2025-06-19)
-   **[完成]** 根据用户反馈进行重大功能升级和视觉优化。
-   **主要更新**:
    -   **新增10种宠物**: 引入了包括猫、狗、龙在内的10种像素宠物，并全部集成到一个SVG雪碧图中。
    -   **实现宠物切换**: 在交互弹窗中添加了下拉菜单，用户可以随时切换并自动保存选择。
    -   **视觉优化**: 显著增大了宠物图标的尺寸，并移除了背景框和阴影，使其外观更佳。
-   **技术实现**:
    -   `style.css`: 使用了包含全部宠物的Data URI，并添加了基于`data-pet-type`属性的样式规则来动态切换宠物。
    -   `index.js`: 扩展了状态管理，增加了`petType`；动态创建了切换UI并绑定了事件，实现了完整的切换和保存逻辑。
-   **反馈来源**: 用户反馈 v1.1.0 版本宠物不好看、太小，并希望能切换不同形态。

### v1.1.0 (2025-06-19)
-   **[完成]** 将 GIF 宠物替换为像素风格的雪碧图动画。
    -   **实现**: 通过将SVG雪碧图作为Data URI嵌入`style.css`，并使用`@keyframes`创建了循环动画，成功解决了GIF显示问题并提升了性能。
