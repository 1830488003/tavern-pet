# 项目名称：酒馆宠物 (Tavern Pet)

**版本**: 11.1.5
**作者**: Cline
**日期**: 2025-06-20

---

## 1. 项目概述

“酒馆宠物”是一个为 SillyTavern 开发的第三方扩展。它在主界面上添加了一个可爱的、可拖动的桌面宠物。用户可以与宠物进行丰富的养成交互，包括喂食、打工、挂机等，这些交互会影响宠物的状态。**其核心是一个成长型系统，玩家通过升级宠物来解锁更丰富的互动、功能和商店物品。**该扩展旨在为用户的酒馆体验增添一些趣味性、陪伴感和深度玩法。

---

## 2. 功能实现

### 2.1 核心文件
- `manifest.json`: 扩展的清单文件，用于在SillyTavern中注册本插件。
- `index.js`: 插件的核心逻辑，包括UI创建、事件处理、状态管理等。
- `style.css`: 定义了浮动按钮、弹窗和设置面板的所有样式。
- `settings.html`: 插件在SillyTavern设置页面的UI结构。

### 2.2 主要功能点

1.  **浮动宠物按钮**:
    -   **动态多宠物系统**: 宠物列表由 `pets.json` 动态生成。用户可在弹窗内通过下拉菜单切换宠物。
    -   **姿态切换**: 鼠标悬停在宠物上，点击右上角刷新图标可切换GIF姿态。
    -   **状态显示**: 宠物图标下方会实时显示宠物的当前状态，如“打工中...”、“托管中...”。
    -   **可拖动与位置记忆**: 宠物可在屏幕上自由拖动，位置会自动保存。窗口缩放时会自动调整位置，防止移出屏幕。

2.  **宠物交互弹窗**:
    -   **多标签页UI**: 分为“状态”、“互动”、“背包”、“商店”四个标签页，结构清晰。
    -   **状态实时更新**: “状态”页以进度条形式实时显示宠物的各项核心属性。
    -   **智能互动**: “互动”页的按钮会根据宠物的当前状态（如“忙碌”、“托管中”）自动禁用或启用，防止误操作。
    -   **背包与商店**: 实现了完整的物品购买、存储和使用流程。

3.  **核心养成系统**:
    -   **状态机**: 引入了 `'idle'`, `'working'`, `'playing'`, `'sick'`, `'hosting'` 等核心状态，宠物的行为和UI反馈都基于当前状态，逻辑严谨。
    -   **离线挂机系统**: “打工”等活动是持续性任务，基于现实时间计算。即使关闭浏览器，计时也会继续，下次上线时自动结算收益。
    -   **一键托管**: 开启后，宠物会根据自身状态智能地进行打工、购买和使用物品等操作，支持离线运行。
    -   **数据持久化**: 宠物的所有状态都保存在 `localStorage` 中，刷新后数据不丢失。
    -   **状态自动衰减与随机事件**: 宠物的状态会随时间缓慢下降，并有几率触发随机事件，增加了养成的真实感和趣味性。

4.  **设置面板集成**:
    -   在SillyTavern的扩展设置中，提供总开关，允许用户随时启用或禁用插件。

---

## 3. 技术实现亮点

- **纯JS动态UI**: 所有UI元素由JS动态创建，与SillyTavern主体无耦合，易于维护。
- **移动端优先**: 布局和拖动功能兼容桌面和移动端。
- **主题自适应**: UI颜色使用SillyTavern的CSS变量，可适配不同主题。
- **健壮的状态管理**: 使用统一的状态机 (`petState.status`) 管理宠物的行为和UI锁定逻辑，代码清晰且不易出错。

---

## 4. 如何使用

1.  确保插件已放置在 `SillyTavern/public/extensions/third-party/` 目录下。
2.  重启SillyTavern。
3.  默认情况下，宠物按钮会出现在屏幕右上角附近。
4.  你可以拖动它到任何位置，点击打开交互菜单。
5.  在“互动”标签页，可以开启“一键托管”，让宠物自动进行各种活动。

---

## 5. 更新日志

### v11.1.5 (完成)
-   **任务**: 彻底修复在平板设备等中等尺寸屏幕下，弹窗视图布局错乱的核心问题。
-   **主要更新**:
    -   **根本原因深挖**: 经过反复测试，最终定位到问题的根源在于 `style.css` 文件中为弹窗定位设置的 `!important` 规则。此规则的优先级极高，导致之前通过JS注入的、不带 `!important` 的内联样式被无视，修复失败。
    -   **终极JS修复方案**: 为此，重构了 `index.js` 中的 `showPetPopup` 函数。废弃了原有的 `.css()` 方法，改为使用 `element.style.setProperty(property, value, 'important')`。
    -   **强制样式覆盖**: 这个新方法可以在JavaScript中为内联样式添加 `!important` 声明。现在，当弹窗在小屏幕上显示时，JS会注入带有最高优先级的居中定位样式，确保它能覆盖掉外部样式表中的任何规则，从而从根本上解决了此次的顽固布局问题。

### v11.1.3 (完成)
-   **任务**: 修复“状态”面板在小屏幕下进度条和数值显示错位的严重布局bug。
-   **主要更新**:
    -   **CSS精准修复**: 在 `style.css` 中，为状态条右侧的数值标签（如 `59/100`）添加了 `min-width: 65px` 和 `flex-shrink: 0` 两个关键属性。此举确保了数值显示区域拥有一个固定的最小宽度且不会被flex布局压缩，从而保证了进度条在任何屏幕尺寸下都能和数值完美对齐，解决了错位问题。
-   **反馈来源**: 用户报告状态面板UI严重错乱。

### v11.1.2 (完成)
-   **任务**: 修复小屏幕下的布局bug，并为宠物拖动增加移动端触摸支持。
-   **主要更新**:
    -   **布局修复**: 将“互动”面板的按钮容器从 flex 改为 **grid 布局**，使用 `repeat(auto-fit, minmax(120px, 1fr))` 实现了自适应排列，彻底解决了小屏幕下的按钮溢出问题。
    -   **移动端拖动适配**: 重构了 `makePetButtonDraggable` 函数，在原有的 `mousedown`/`mousemove`/`mouseup` 事件基础上，增加了对 **`touchstart`/`touchmove`/`touchend`** 事件的完整支持。现在宠物图标可以在手机、平板等触摸设备上被流畅地拖动。
-   **反馈来源**: 用户报告在特定尺寸下UI显示异常，并希望能在移动端拖动宠物。

### v11.0.0 (完成)
-   **任务**: **重构为成长型系统，玩家通过升级宠物解锁更多功能和商店物品。**
-   **主要更新**:
    -   **等级与经验系统**: 引入了核心的等级（Level）和经验值（EXP）系统作为宠物成长的基础。
    -   **成长驱动**: 现在，喂食、打工、陪玩等几乎所有互动行为都会为宠物提供经验值，鼓励玩家积极参与。
    -   **功能解锁机制**: 核心玩法重构。商店中的高级物品、新的互动选项、甚至未来的游戏模块（如探险、装扮系统）都与宠物等级挂钩，需要升级才能逐一解锁。
    -   **UI升级**: 状态面板将更新，清晰地展示等级和经验条。所有锁定的功能或物品都会以直观的方式（例如灰色锁定图标和等级提示）告知玩家解锁条件。
    -   **动态商店与互动**: 商店和互动菜单的内容将根据宠物等级动态生成，确保玩家在任何阶段都有明确的成长目标。
    -   **(v11.1) 互动状态倒计时**: 当宠物处于“打工”等忙碌状态时，“互动”面板将不再是简单的禁用按钮，而是会显示一个包含活动名称和**实时秒级倒计时**的状态视图，让玩家可以明确地看到剩余时间。
-   **反馈来源**: 用户要求增加成长性玩法，提升长期可玩性。用户反馈在宠物忙碌时互动界面缺少状态反馈。

### v10.1.6 (完成)
-   **任务**: 调整宠物图标尺寸，使其更小巧。
-   **主要更新**:
    -   **CSS调整**: 在 `style.css` 中，将 `#tavern-pet-button` 的尺寸从 `100px` x `100px` 缩小至 `50px` x `50px`。
    -   **关联元素调整**: 同步按比例缩小了右上角的刷新按钮，并调整了下方的状态文本和反馈框的垂直位置，以匹配新的图标尺寸，保持视觉协调。
-   **反馈来源**: 用户反馈宠物图标过大。

### v10.1.5 (完成)
-   **任务**: 恢复在之前版本中因样式丢失而“消失”的宠物图片右上角刷新按钮。
-   **主要更新**:
    -   **CSS修复**: 在 `style.css` 中为 `#tavern-pet-refresh-button` 添加了完整的样式定义，包括绝对定位、尺寸、背景、边框圆角和透明度过渡效果。
    -   **交互优化**: 按钮现在默认隐藏，仅当鼠标悬停在宠物图片上时才会平滑地显示出来，提升了界面的整洁度。
-   **反馈来源**: 用户报告用于切换宠物姿态的刷新按钮消失。

### v10.1.4 (完成)
-   **任务**: 修复状态数值条完全消失以及金币显示为长串小数的问题。
-   **主要更新**:
    -   **金币显示修复**: 在 `renderStatusTab` 和 `updatePetPopup` 函数中，对所有金币和状态数值的显示强制使用 `Math.round()`，确保始终显示整数。
    -   **状态条数值恢复**: 修改了 `renderStatusTab` 函数，为每个状态进度条（饥饿、心情等）重新添加了用于显示具体数值的 `<span>` 元素（例如 `80/100`），并同步更新了 `updatePetPopup` 函数以支持动态刷新这些数值。
-   **反馈来源**: 用户报告状态弹窗中的所有数值条都消失了，只剩下标题，并且金币数量显示不正确。

### v10.1.3 (完成)
-   **任务**: 修复状态数值条消失和金币显示为小数的问题。
-   **主要更新**:
    -   **金币显示修复**: 在所有显示金币的地方（状态页、商店页、弹窗更新）都使用了 `Math.round()`，确保金币始终为整数。
    -   **状态条恢复**: 经过检查，发现是之前的修复误删了渲染代码。已在 `renderStatusTab` 函数中恢复了饥饿、心情、清洁和健康等状态条的HTML结构。
    -   **小错误修正**: 修正了 `run托管Logic` 函数中错误的函数调用 (`toggle托管` -> `toggleHosting`)。
-   **反馈来源**: 用户报告状态条消失，且金币显示为一长串小数。

### v10.1.2 (完成)
-   **任务**: 修复因 `v10.1.1` 代码清理失误导致的 `ReferenceError`，该错误导致 `renderStatusTab` 和 `closePetPopup` 函数未定义，点击宠物图标无法打开弹窗。
-   **主要更新**:
    -   **函数恢复**: 重新实现了被意外删除的 `renderStatusTab` 和 `closePetPopup` 函数，确保弹窗功能可以正常工作。
    -   **加载流程修复**: 解决了导致插件初始化失败的引用错误，确保插件能够被成功加载和渲染。
-   **反馈来源**: 在 `v10.1.1` 修复后，点击宠物图标无法打开弹窗。

### v10.1.1 (完成)
-   **任务**: 修复因 `v10.1.0` 代码清理失误导致的 `ReferenceError`，该错误导致 `makePetButtonDraggable` 函数未定义，插件无法正常加载。
-   **主要更新**:
    -   **函数恢复**: 重新实现了被意外删除的 `makePetButtonDraggable` 函数，确保宠物按钮的拖动功能可以正常工作。
    -   **加载流程修复**: 解决了导致插件初始化失败的引用错误，确保插件能够被成功加载和渲染。
-   **反馈来源**: 在 `v10.1.0` 修复后，浏览器控制台报告了 `makePetButtonDraggable is not defined` 的错误。

### v10.1.0 (完成)
-   **任务**: 修复因代码合并失误导致的严重错误：`index.js` 中存在两个同名的 `updateInteractionLock` 函数，导致所有互动按钮被禁用。
-   **主要更新**:
    -   **关键错误修复**: 经过仔细排查，定位并移除了多余的 `updateInteractionLock` 函数声明。
    -   **代码健壮性**: 此次修复确保了UI状态管理逻辑的唯一性和正确性，恢复了互动弹窗的全部功能。
-   **反馈来源**: 在 v10.0.0 更新后，发现所有互动按钮均无法使用。

### v10.0.0 (完成)
-   **任务**: 修复一键托管时状态不明、UI层级过低、按钮状态不正确的问题。
-   **主要更新**:
    -   **状态机重构**: 废除了原有的 `is托管中` 布尔值，将“一键托管”作为一个新的状态 `'hosting'` 统一纳入到核心状态机 `petState.status` 中。
    -   **UI层级修复**: 大幅提高了所有宠物相关UI元素（按钮、弹窗、通知）的 `z-index` 值，确保其显示在页面最顶层，解决了被遮挡的问题。
    -   **可视化状态反馈**: 当宠物处于“托管中”或“打工”等忙碌状态时，其下方的状态文本会明确显示当前活动，让用户一目了然。
    -   **智能按钮锁定**: 重构了互动弹窗的按钮更新逻辑。现在，当宠物处于任何忙碌状态（包括托管）时，所有不相关的操作按钮都会被自动禁用，有效防止了用户的误操作。同时，“一键托管”按钮的文本会根据状态正确地在“一键托管”和“取消托管”之间切换。
-   **反馈来源**: 用户反馈托管时状态不明，UI被遮挡，且互动按钮未被正确禁用。

### v9.0.0 (完成)
-   **任务**: 模仿QQ宠物，将插件从一个简单的数值挂件，升级为一个有深度、有反馈、真正“可玩”的养成游戏。
-   **主要更新**:
    -   **状态机系统**: 引入了 `'idle'`, `'working'`, `'playing'`, `'sick'` 等状态。
    -   **持续性活动**: “打工”和“陪玩”被重构为持续性活动。
    -   **智能互动流**: 重构了“喂食”、“洗澡”、“看病”功能，实现了智能物品检查与选择。
    -   **随机事件**: 新增随机事件系统。
-   **反馈来源**: 用户要求参考QQ宠物的设计，增加更丰富的互动功能。

### v8.0.0 (完成)
-   **任务**: 将姿态切换功能从弹窗按钮移至宠物图标右上角的悬浮刷新按钮。
-   **反馈来源**: 用户要求将切换功能直接集成到宠物图标上，以简化UI。

### v7.0.0 (完成)
-   **任务**: 实现一个由 `pets.json` 驱动的、支持多宠物、多姿态的全新宠物系统。
-   **反馈来源**: 用户要求使用 `url/` 目录下的txt文件生成更多宠物，并为每个宠物添加命名和姿态切换功能。
